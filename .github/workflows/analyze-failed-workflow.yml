name: AI Workflow Failure Analyzer

on:
  workflow_run:
    workflows: ["Gemini PR Code Review"] # <-- ★ここに、監視したいワークフロー名 を記述★
    types:
      - completed

jobs:
  analyze_failure:
    if: ${{ github.event.workflow_run.conclusion == 'failure' }}
    runs-on: ubuntu-latest
    
    permissions:
      contents: read
      issues: write
      pull-requests: write # ★ PRへの書き込み権限を追加
      actions: read

    steps:
    - name: コードのチェックアウト
      uses: actions/checkout@v4

    - name: Pythonのセットアップ
      uses: actions/setup-python@v5
      with:
        python-version: '3.x'

    - name: 依存関係のインストール
      run: |
        pip install requests google-generativeai

    - name: 失敗したジョブの詳細を取得し、分析を実行
      env:
        # ワークフローの基本情報をPythonスクリプトに渡す
        FAILED_WORKFLOW_RUN_ID: ${{ github.event.workflow_run.id }}
        FAILED_WORKFLOW_NAME: ${{ github.event.workflow_run.name }}
        FAILED_WORKFLOW_RUN_URL: ${{ github.event.workflow_run.html_url }}
        
        # ★ 関連するPR番号をPythonスクリプトに渡す (PRがない場合は空になる)
        PULL_REQUEST_NUMBER: ${{ github.event.workflow_run.pull_requests[0].number }}
        
        # シークレット
        GOOGLE_API_KEY: ${{ secrets.GOOGLE_API_KEY }}
        # GITHUB_TOKENは自動的に付与されるため、明示的にsecretsから渡す必要はない
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      run: |
        echo "ワークフロー実行ID ${{ env.FAILED_WORKFLOW_RUN_ID }} の失敗したジョブIDを探しています。"
        
        # GitHub APIを呼び出してジョブデータを取得
        JOB_DATA=$(curl -s -H "Authorization: token ${{ env.GITHUB_TOKEN }}" \
                         -H "Accept: application/vnd.github.v3+json" \
                         "https://api.github.com/repos/${{ github.repository }}/actions/runs/${{ env.FAILED_WORKFLOW_RUN_ID }}/jobs")
        
        # jq を使って失敗したジョブのIDと名前を取得
        FAILED_JOB_ID=$(echo "$JOB_DATA" | jq -r '.jobs[] | select(.conclusion == "failure") | .id' | head -n 1)
        FAILED_JOB_NAME=$(echo "$JOB_DATA" | jq -r '.jobs[] | select(.conclusion == "failure") | .name' | head -n 1)
        
        if [ -z "$FAILED_JOB_ID" ]; then
          echo "分析対象の失敗したジョブが見つかりませんでした。"
          exit 0
        fi
        
        echo "失敗したジョブID: $FAILED_JOB_ID (名前: $FAILED_JOB_NAME) を検出しました。"
        
        # Pythonスクリプトに環境変数を渡して実行
        # (envブロックで定義した変数は自動で引き継がれる)
        export FAILED_JOB_ID="$FAILED_JOB_ID"
        export FAILED_JOB_NAME="$FAILED_JOB_NAME"

        python analyze_log.py